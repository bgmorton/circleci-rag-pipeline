version: 2.1

# Define custom commands for this config
# See https://circleci.com/docs/reusing-config/#authoring-reusable-commands
commands:
  check-python:
    steps:
      - run:
          command: python3 --version
          name: Check Python version
      - run:
          command: pip3 --version
          name: Check Pip version
  enter-venv:
    steps:
      - run:
          command: source ./tools/enter-venv.sh
          name: Enter virtual env and install dependencies


# Define custom jobs for this config
# See: https://circleci.com/docs/jobs-steps/
jobs:
  run-unit-tests:
    machine: # executor type
      # for a full list of Linux VM execution environments, see
      # https://circleci.com/developer/images?imageType=machine
      image: ubuntu-2204:2023.07.2
    context: rag  # contains environment variables
    steps:
      - checkout # Check out the code in the project directory
      - check-python # Invoke command "check-python"
      - create-env     
      - enter-venv
      - run:
          command: source ./venv/bin/activate && pytest -s
          name: Test rag unit tests

# Invoke jobs via workflows
# See: https://circleci.com/docs/workflows/
workflows:
  # This workflow does a full build from scratch and deploys the model
  integration-tests:
    jobs:
      - run-unit-tests:
          filters:
            branches:
              only:
                - rag-pipeline # Only run the job when the main branch is updated
